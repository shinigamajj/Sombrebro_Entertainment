<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menuState = 1;

/* Menu States */
/*
    1 = Pause Menu
    2 = Quit?
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(menuState == 1){
    if(menu_pause_button_menu.isSelected){
        if(keyboard_check_pressed(vk_enter)){
            menu_pause_button_menu.isSelected = false;
            instance_create(view_xview[0]+112,view_yview[0]+200,menu_pause_button_yes);
            instance_create(view_xview[0]+224,view_yview[0]+200,menu_pause_button_no);
            with(menu_pause_button_menu){instance_destroy();}
            with(menu_pause_button_continue){instance_destroy();}
            menu_pause_button_yes.isSelected = true;
            menuState = 2;
        } else if(keyboard_check_pressed(vk_right)){
            menu_pause_button_menu.isSelected = false;
            menu_pause_button_continue.isSelected = true;
        } else { exit; }
    
    } else if(menu_pause_button_continue.isSelected){
        if(keyboard_check_pressed(vk_enter)){
            menu_pause_button_continue.isSelected = false;
            instance_activate_all();
            with(menu_pause_button_menu){instance_destroy();}
            with(menu_pause_button_continue){instance_destroy();}
            with(gamePause){instance_destroy();}
        } else if(keyboard_check_pressed(vk_left)){
            menu_pause_button_continue.isSelected = false;
            menu_pause_button_menu.isSelected = true;
        } else { exit; }
    } else { exit; }
} else if(menuState == 2) {
    if(menu_pause_button_yes.isSelected){
        if(keyboard_check_pressed(vk_enter)){
            game_restart();
        } else if(keyboard_check_pressed(vk_right)){
            menu_pause_button_yes.isSelected = false;
            menu_pause_button_no.isSelected = true;
        } else { exit; }
    }else if(menu_pause_button_no.isSelected){
        if(keyboard_check_pressed(vk_enter)){
            menu_pause_button_no.isSelected = false;
            instance_create(view_xview[0]+112,view_yview[0]+200,menu_pause_button_menu);
            instance_create(view_xview[0]+224,view_yview[0]+200,menu_pause_button_continue);
            with(menu_pause_button_yes){instance_destroy();}
            with(menu_pause_button_no){instance_destroy();}
            menu_pause_button_menu.isSelected = true;
            menuState = 1;
        } else if(keyboard_check_pressed(vk_left)){
            menu_pause_button_no.isSelected = false;
            menu_pause_button_yes.isSelected = true;
        } else { exit; }
    } else { exit; }


} else { exit; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>526</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_font</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>12</kind>
            <font>ComicSans</font>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>514</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_text</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>2</kind>
            <string>PAUSED</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>view_xview[0] + view_wview[0]/2</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>view_yview[0] + view_hview[0]/2</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
